import{_ as o,c as a,o as e,a4 as t}from"./chunks/framework.DpC1ZpOZ.js";const u=JSON.parse('{"title":"Android Root","description":"","frontmatter":{},"headers":[],"relativePath":"blogs/android/root.md","filePath":"blogs/android/root.md"}'),i={name:"blogs/android/root.md"},l=t('<h1 id="android-root" tabindex="-1">Android Root <a class="header-anchor" href="#android-root" aria-label="Permalink to &quot;Android Root&quot;">​</a></h1><p>在现代Android系统上利用Magisk或KernelSU等Root框架获取Root权限。 本文假定读者具有搜索能力和基础的计算机知识、Android知识。</p><h2 id="_1-准备工作" tabindex="-1">1. 准备工作 <a class="header-anchor" href="#_1-准备工作" aria-label="Permalink to &quot;1. 准备工作&quot;">​</a></h2><h3 id="_1-1-备份数据" tabindex="-1">1.1. 备份数据 <a class="header-anchor" href="#_1-1-备份数据" aria-label="Permalink to &quot;1.1. 备份数据&quot;">​</a></h3><p>若此前未解锁过BL，Root一定需要清除数据。此外Root过程中及之后均有误操作导致数据丢失的风险。请自行选择合适的方案备份数据后再继续。</p><h3 id="_1-2-解锁bootloader-bl锁" tabindex="-1">1.2. 解锁Bootloader（BL锁） <a class="header-anchor" href="#_1-2-解锁bootloader-bl锁" aria-label="Permalink to &quot;1.2. 解锁Bootloader（BL锁）&quot;">​</a></h3><p>简单来说，Bootloader是在手机启动时用于引导操作系统启动的程序。它在默认（有BL锁）状态下不允许引导第三方系统，而Root需要修改系统。所以在Root前需要解锁BootLoader。</p><p>目前（2024.8），官方支持解锁的常见品牌有：</p><ol><li>一加全系</li><li>Google Pixel全系</li><li>三星（大多数区域支持；解锁后会物理熔断Knox，导致部分功能缺失和不保修等）</li><li>小米全系（新机型有极为严苛的要求；旧机型可以通过降级、脚本的方式从“官方渠道”解锁）</li><li>Oppo其他系列（仅特定机型；需要申请“深度测试”）</li></ol><p>请前往相应品牌的社区寻找解锁方法并完成解锁。</p><h2 id="_2-选择root方案" tabindex="-1">2. 选择Root方案 <a class="header-anchor" href="#_2-选择root方案" aria-label="Permalink to &quot;2. 选择Root方案&quot;">​</a></h2><p>目前存在Magisk及其修改版、KernelSU、APatch等多种Root方式。存在线刷、卡刷两种安装方式。请自行选择需要的方式，获取需要的文件，并跳转至<a href="#_4-安装">第4节</a>。 本文也在<a href="#_3-获取安装所需文件">第3节</a>提供一种通用的获取思路。</p><h2 id="_3-获取安装所需文件" tabindex="-1">3. 获取安装所需文件 <a class="header-anchor" href="#_3-获取安装所需文件" aria-label="Permalink to &quot;3. 获取安装所需文件&quot;">​</a></h2><h3 id="_3-1-使用线刷" tabindex="-1">3.1. 使用线刷 <a class="header-anchor" href="#_3-1-使用线刷" aria-label="Permalink to &quot;3.1. 使用线刷&quot;">​</a></h3><ol><li>若Root方案提供了GKI内核，请检查兼容性后获取相应版本和压缩方式的内核，并跳转至<a href="#_4-1-使用线刷">第4节的线刷</a>。</li><li>获取手机的boot分区或init_boot分区（这取决于手机的出厂安卓版本和Root方案，请自行搜索）文件（一般为boot.img或init_boot.img）。这可以通过解压线刷包、解压卡刷包并解包等渠道获取。请确认文件未损坏且未被修改。将这个文件传输至手机。</li><li>在手机上安装Root方案提供的Root管理器，它一般会在主页提供“安装”选项。在其中选择类似于“修补一个文件”的选项，选择上一步中获取的文件，等待修补完成且未出现异常后将修补完成的文件传输回电脑。</li></ol><h3 id="_3-2-使用卡刷" tabindex="-1">3.2. 使用卡刷 <a class="header-anchor" href="#_3-2-使用卡刷" aria-label="Permalink to &quot;3.2. 使用卡刷&quot;">​</a></h3><ol><li>在此之前，请确保手机内置的Recovery支持卡刷或侧载（ADB Sideload），或安装支持这样功能的第三方Recovery。</li><li>若Root方案说明，其管理器可以作为卡刷包使用，或提供了卡刷包，请将该文件下载并传输至手机（若使用侧载，则储存在电脑）。若没有，请使用线刷。</li></ol><h2 id="_4-安装" tabindex="-1">4. 安装 <a class="header-anchor" href="#_4-安装" aria-label="Permalink to &quot;4. 安装&quot;">​</a></h2><h3 id="_4-1-使用线刷" tabindex="-1">4.1. 使用线刷 <a class="header-anchor" href="#_4-1-使用线刷" aria-label="Permalink to &quot;4.1. 使用线刷&quot;">​</a></h3><ol><li>将手机重启至fastboot或fastbootd模式，并连接至电脑。这一般可以通过adb或在手机开机时使用组合键实现。请自行搜索。</li><li>使用fastboot刷写获取的文件到相应分区，其命令格式一般如下：<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>fastboot flash 分区 文件</span></span></code></pre></div></li><li>待刷写完成后，将手机重启。</li></ol><h3 id="_4-2-使用卡刷" tabindex="-1">4.2. 使用卡刷 <a class="header-anchor" href="#_4-2-使用卡刷" aria-label="Permalink to &quot;4.2. 使用卡刷&quot;">​</a></h3><ol><li>重启至Recovery模式，并连接至电脑。这一般可以通过adb或在手机开机时使用组合键实现。请自行搜索。</li><li>若Recovery支持卡刷，请参照该Recovery的教程刷入获取的文件。若仅支持侧载，则使用adb进行侧载，其命令格式一般如下：<div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>adb sideload 文件</span></span></code></pre></div></li><li>待刷写完成后，将手机重启。</li></ol><h2 id="_5-完成" tabindex="-1">5. 完成 <a class="header-anchor" href="#_5-完成" aria-label="Permalink to &quot;5. 完成&quot;">​</a></h2><p>待手机重启后，安装相应的Root管理器，检查是否已成功Root。之后可以使用该Root管理器赋予软件Root权限或安装模块。</p>',24),r=[l];function d(s,n,h,c,_,b){return e(),a("div",null,r)}const f=o(i,[["render",d]]);export{u as __pageData,f as default};
